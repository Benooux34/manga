import Head from 'next/head'
import Link from 'next/link';
import { motion } from "framer-motion"
import { BsSearch } from "react-icons/bs";
import Logo from '../components/Logo';
import { useState } from 'react';

import datas from "../lib/data.json"


export default function Home() {

  const [query, setQuery] = useState("")
  const [results, setResults] = useState("")

  const onChange = (e) => {
    const { value } = e.target
    setQuery(value)

    let matchingData = []

    if (value.length > 1) {
      for(let d of datas) {
        if (matchingData.length >= 2) {
          break;
        }

        const match = d.name.toLowerCase().startsWith(value.toLowerCase())

        if (match) {
          const mangaData = {
            ...d,
            slug: `${d.name.toLowerCase().replace(/ /g, "-")}-${d.id}`
          }

          matchingData.push(mangaData);
          continue;
        }
      }
    }
    return setResults(matchingData)
  }

  return (
    <div>
      <Head>
        <title>Manga Panel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Logo */}
      <Logo />
      
      {/* Titre */}
      <div className="text-center mt-10 mx-10">
        <h1 className="text-white text-2xl sm:text-5xl font-light tracking-widest mb-[30px] sm:mb-5">Freedom|Manga</h1>
        <span className="text-orange-400">Attention Spoiler ! Certaines planches peuvent vous spoiler.</span>
      </div>

      {/* Barre de recherche */}
      <div className="mx-[10%] sm:mx-[24%]">
        <div className="flex justify-center items-center mt-[30px] sm:mt-[40px]">
          <input className="w-[100%] pl-3 py-[10px] sm:py-[15px] bg-[#727272] rounded-l-[10px] text-white outline-none" placeholder="Cherchez votre manga..." value={query} onChange={onChange} />
          <div className="bg-[#727272] px-[10px] py-[12px] sm:py-[17px] rounded-r-[10px]">
            <BsSearch color='white' font-size='20' />
          </div>
        </div>
        <div className="bg-[#727272] rounded-[10px]">
          {query.length > 1 && (
            <ul className="py-3 px-3 text-white space-y-3 mt-2">
              {results.length > 0 ? (
                results.map((d) => {
                  return(
                    <li key={d.id}>
                      <Link href={{
                        pathname: "manga/[id]",
                        query: {
                          id: d.id,
                          name: d.name,
                          auteur: d.auteur,
                          img: d.img
                        }
                      }}>
                        <a className="border border-[#727272] border-b-white">{d.name}</a>
                      </Link>
                    </li>
                  )
                })
               ) : (
                <li>Aucun RÃ©sultat</li>
              )}
            </ul>
           )}
        </div>
      </div>

      {/* Manga */}
      <div className="my-10 grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-5 place-items-center justify-self-center mx-10 md:mx-[23%]">
          {datas.map((d) => {

            return(        
              <motion.div whileHover={{ scale: 1.05 }} className="cursor-pointer" key={d.id}>      
                <Link href={{
                  pathname: "manga/[id]",
                  query: {
                    id: d.id,
                    name: d.name,
                    auteur: d.auteur,
                    img: d.img
                  }
                }}>
                  <img className="h-[120px] sm:h-40 rounded-[10px]" src={d.icon} alt="" />
                </Link>
                <span className="text-white text-[16px] font-light tracking-widest">{d.name}</span>
              </motion.div>
            )
          })}
      </div>
    </div>
  )
}
